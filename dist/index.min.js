const tsTranspiledEvent=new Event("tsTranspiled"),workerFile=window.URL.createObjectURL(new Blob(["\n        importScripts('https://unpkg.com/typescript@latest')\n\n        const load = sourceUrl => {\n          const xhr = XMLHttpRequest\n            ? new XMLHttpRequest()\n            : ActiveXObject\n            ? new ActiveXObject('Microsoft.XMLHTTP')\n            : null\n\n          if (!xhr) return ''\n\n          xhr.open('GET', sourceUrl, false)\n          xhr.overrideMimeType && xhr.overrideMimeType('text/plain')\n          xhr.send(null)\n          return xhr.status == 200 ? xhr.responseText : ''\n        }\n\n        onmessage = ({data: sourceUrl}) => {\n          const raw = load(sourceUrl)\n          const transpiled = ts.transpile(raw)\n          postMessage(transpiled)\n        }\n      "],{type:"text/javascript"}));window.addEventListener("DOMContentLoaded",async()=>{const e=document.getElementsByTagName("script");let t=[];for(let n=0;n<e.length;n++)if("text/typescript"===e[n].type){const s=e[n].src;t.push(new Promise(t=>{const r=new Worker(workerFile);r.postMessage(s),r.onmessage=(s=>{let r=s.data;const o=document.createElement("script");o.innerHTML=`window.addEventListener('tsTranspiled', function() {\n              ${r}\n            })`,e[n].replaceWith(o),t()})}))}await Promise.all(t),window.dispatchEvent(tsTranspiledEvent)});