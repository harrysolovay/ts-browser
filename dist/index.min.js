const tsTranspiledEvent=new Event("tsTranspiled"),workerFile=window.URL.createObjectURL(new Blob(["\n        importScripts('https://unpkg.com/typescript@latest')\n\n        const load = sourceUrl => {\n          const xhr = XMLHttpRequest\n            ? new XMLHttpRequest()\n            : ActiveXObject\n            ? new ActiveXObject('Microsoft.XMLHTTP')\n            : null\n\n          if (!xhr) return ''\n\n          xhr.open('GET', sourceUrl, false)\n          xhr.overrideMimeType && xhr.overrideMimeType('text/plain')\n          xhr.send(null)\n          return xhr.status == 200 ? xhr.responseText : ''\n        }\n\n        onmessage = ({data: sourceUrl}) => {\n          const raw = load(sourceUrl)\n          const transpiled = ts.transpile(raw)\n          postMessage(transpiled)\n        }\n      "],{type:"text/javascript"}));window.addEventListener("DOMContentLoaded",async()=>{const n=document.getElementsByTagName("script");let e=[];for(let t=0;t<n.length;t++)if("text/typescript"===n[t].type){const r=n[t].src;e.push(new Promise(e=>{const s=new Worker(workerFile);s.postMessage(r),s.onmessage=(r=>{let s=r.data;const o=document.createElement("script");o.innerHTML=`window.addEventListener('tsTranspiled', function() {\n              ${s}\n            })`,n[t].t(o),e()})}))}await Promise.all(e),window.dispatchEvent(tsTranspiledEvent)});